{"version":3,"sources":["ng://ace-calendar/lib/ace-calendar.service.ts","ng://ace-calendar/lib/ace-calendar.component.ts","ng://ace-calendar/lib/ace-calendar.module.ts"],"names":["AceCalendarService","Injectable","args","providedIn","AceCalendarComponent","this","months","pickedDate","aux","onDatePicked","EventEmitter","prototype","ngOnInit","datePickerElement","document","querySelector","selectedDateElement","datesElement","mthElement","nextMthElement","prevMthElement","daysElement","yearsElement","dateName","date","Date","day","getDate","month","getMonth","year","getFullYear","selectedDate","selectedDay","selectedMonth","selectedYear","textContent","formatDate","dataset","value","populateDates","getDays","innerHTML","start","amountDays","m","s","counter","getDay","toString","split","i","dayElementEmpty","createElement","classList","add","appendChild","dayElement","addEventListener","onClick","bind","event","test","currentTarget","numbr","tt","style","borderRadius","color","backgroundColor","x","dd","emit","d","openCalendar","e","toggleDatePicker","checkEventPathForClass","path","toggle","goToNextMonth","goToPrevMonth","onNextMonth","days","length","wishedDate","console","log","selector","contains","Component","template","Output","AceCalendarModule","NgModule","declarations","imports","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AceCalendarService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'lib-ace-calendar',\n  templateUrl: './ace-calendar.calendar.html',\n  styleUrls: ['./ace-calendar.calendar.scss']\n})\nexport class AceCalendarComponent implements OnInit {\n  datePickerElement: any;\n  selectedDateElement: any;\n  datesElement: any;\n  mthElement: any;\n  nextMthElement: any;\n  prevMthElement: any;\n  daysElement: any;\n  months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  date: any;\n  day: any;\n  month: any;\n  year: any;\n  selectedDate: any;\n  selectedDay: any;\n  selectedMonth: any;\n  selectedYear: any;\n  dateName: any;\n  pickedDate = 0;\n  aux = 0;\n  test: any;\n  tt: any;\n  yearsElement: any;\n  getDate: any;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onDatePicked: EventEmitter<any> = new EventEmitter<any>();\n  constructor() { }\n\n  ngOnInit() {\n    this.datePickerElement = document.querySelector('.date-picker');\n    this.selectedDateElement = document.querySelector('.date-picker .selected-date');\n    this.datesElement = document.querySelector('.date-picker .dates');\n    this.mthElement = document.querySelector('.date-picker .dates .month .mth');\n    this.nextMthElement = document.querySelector('.date-picker .dates .month .next-mth');\n    this.prevMthElement = document.querySelector('.date-picker .dates .month .prev-mth');\n    this.daysElement = document.querySelector('.date-picker .dates .days');\n    this.yearsElement = document.querySelector('.date-picker .years');\n    this.dateName = document.querySelector('.days-names');\n    this.date = new Date();\n    this.day = this.date.getDate();\n    this.month = this.date.getMonth();\n    this.year = this.date.getFullYear();\n    this.selectedDate = this.date;\n    this.selectedDay = this.day;\n    this.selectedMonth = this.month;\n    this.selectedYear = this.year;\n    this.mthElement.textContent = this.months[this.month] + ' ' + this.year;\n    this.selectedDateElement.textContent = this.formatDate(this.date);\n    this.selectedDateElement.dataset.value = this.selectedDate;\n    this.populateDates();\n    this.getDays();\n  }\n  populateDates() {\n    this.daysElement.innerHTML = '';\n    let amountDays = 31;\n    let start = '';\n    const m = this.month + 1;\n    if (this.month === 1) {\n      amountDays = 28;\n      if ((this.year % 4) === 0) {\n        amountDays = 29;\n      }\n    }\n    start = '0' + m + '/' + '01/'  + this.year;\n    const s = new Date(start);\n    const tab = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const dayName = tab[s.getDay()];\n    const d = new Date(start);\n    const dayNames = d.toString().split(' ')[0];\n    let counter = s.getDay() - 1;\n    if (s.getDay() === 0) {\n      counter = 6;\n    }\n\n    for (let i = 0; i <  counter; i++) {\n      let dayElementEmpty: any;\n      dayElementEmpty = document.createElement('div');\n      dayElementEmpty.classList.add('day');\n      dayElementEmpty.textContent = ' ';\n      this.daysElement.appendChild(dayElementEmpty);\n    }\n    for (let i = 0; i < amountDays; i++) {\n      let dayElement: any;\n      dayElement = document.createElement('div');\n      dayElement.textContent = i + 1;\n      if (this.selectedDay === (i + 1) && this.selectedYear === this.year && this.selectedMonth === this.month) {\n        dayElement.classList.add('selected');\n      }\n      dayElement.addEventListener('click', this.onClick.bind(this));\n\n      this.pickedDate = this.aux;\n      this.daysElement.appendChild(dayElement);\n    }\n  }\n  onClick( event ) {\n    this.test = event.currentTarget;\n    let numbr = this.test.textContent;\n\n    if (this.pickedDate !== this.aux) {\n      this.tt.style.borderRadius = 'none';\n      this.tt.style.color = '#000';\n      this.tt.style.backgroundColor = '#fff';\n    }\n    this.aux++;\n    this.test.style.backgroundColor = '#ee316b';\n    this.test.style.borderRadius = '50%';\n    this.test.style.color = '#fff';\n    this.tt = this.test;\n    if (numbr < 10) {\n      numbr = '0' + numbr;\n    }\n    let x = this.month + 1;\n    if (x < 10) {\n      x = '0' + x;\n    }\n    const dd =  numbr + '/' + (x) + '/' + this.year;\n    this.selectedDateElement.textContent = dd;\n    this.getDate = dd;\n    //console.log('the selected date is ', this.getDate);\n    this.onDatePicked.emit(this.getDate);\n  }\n  formatDate(d) {\n    let day = d.getDate();\n    if (day < 10) {\n      day = '0' + day;\n    }\n    let month = d.getMonth() + 1;\n    if (month < 10) {\n      month = '0' + month;\n    }\n    this.year = d.getFullYear();\n    return day + ' / ' + month + ' / ' + this.year;\n  }\n  openCalendar(e) {\n    this.toggleDatePicker(e);\n  }\n  toggleDatePicker(e) {\n    if (!this.checkEventPathForClass(e.path, 'dates')) {\n      this.datesElement.classList.toggle('active');\n    }\n  }\n  goToNextMonth(e) {\n    this.month++;\n    if (this.month > 11) {\n      this.month = 0;\n      this.year++;\n    }\n    this.mthElement.textContent = this.months[this.month] + ' ' + this.year;\n    this.populateDates();\n  }\n  goToPrevMonth(e) {\n    this.month--;\n    if (this.month < 0) {\n      this.month = 11;\n      this.year--;\n    }\n    this.mthElement.textContent = this.months[this.month] + ' ' + this.year;\n    this.populateDates();\n  }\n\n  onNextMonth() {\n    this.month++;\n    if (this.month > 11) {\n      this.month = 0;\n      this.year++;\n    }\n    this.mthElement.textContent = this.months[this.month] + ' ' + this.year;\n    this.populateDates();\n  }\n  getDays() {\n    const days = [\n      'Mon',\n      'Tue',\n      'Wed',\n      'Thu',\n      'Fri',\n      'Sat',\n      'Sun'\n    ];\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < days.length; i++) {\n      let dayElement: any;\n      dayElement = document.createElement('div');\n      dayElement.classList.add('day');\n      dayElement.textContent = days[i];\n      this.dateName.appendChild(dayElement);\n    }\n  }\n  public wishedDate() {\n    this.onDatePicked.emit(this.getDate);\n    console.log('the selected date is ', this.getDate);\n  }\n  // HELPER FUNCTIONS\n  checkEventPathForClass(path, selector) {\n\t  // tslint:disable-next-line:indent\n\t  // tslint:disable-next-line:prefer-for-of\n\t  for ( let i = 0; i < path.length; i++ ) {\n\t   \tif (path[i].classList && path[i].classList.contains(selector)) {\n\t\t  \treturn true;\n\t\t}\n\t}\n\t  return false;\n}\n}\n","import { NgModule } from '@angular/core';\nimport { AceCalendarComponent } from './ace-calendar.component';\n\n\n\n@NgModule({\n  declarations: [AceCalendarComponent],\n  imports: [\n  ],\n  exports: [AceCalendarComponent]\n})\nexport class AceCalendarModule { }\n"]}